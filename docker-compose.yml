version: "3.9"

services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - ./app:/app
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - INITIAL_ORDER_NUMBER=${INITIAL_ORDER_NUMBER}
      - EMAIL_ADMIN_ADDRESS=${EMAIL_ADMIN_ADDRESS}
      - EMAIL_ACCOUNTS_ADDRESS=${EMAIL_ACCOUNTS_ADDRESS}
      - EMAIL_LOGIST_ADDRESS=${EMAIL_LOGIST_ADDRESS}
      - MAIN_PHONE=${MAIN_PHONE}
      - FACT_ADDRESS=${FACT_ADDRESS}
      - YANDEX_MAPS_LINK=${YANDEX_MAPS_LINK}
      - YANDEX_MAPS_API_LINK=${YANDEX_MAPS_API_LINK}
      - DEBUG=${DEBUG}
      - DADATA_TOKEN=${DADATA_TOKEN}
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  redis:
    image: redis:alpine
    restart: always

  celery:
    restart: always
    build:
      context: .
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - INITIAL_ORDER_NUMBER=${INITIAL_ORDER_NUMBER}
      - EMAIL_ADMIN_ADDRESS=${EMAIL_ADMIN_ADDRESS}
      - EMAIL_ACCOUNTS_ADDRESS=${EMAIL_ACCOUNTS_ADDRESS}
      - EMAIL_LOGIST_ADDRESS=${EMAIL_LOGIST_ADDRESS}
      - MAIN_PHONE=${MAIN_PHONE}
      - FACT_ADDRESS=${FACT_ADDRESS}
      - YANDEX_MAPS_LINK=${YANDEX_MAPS_LINK}
      - YANDEX_MAPS_API_LINK=${YANDEX_MAPS_API_LINK}
      - DADATA_TOKEN=${DADATA_TOKEN}
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    depends_on:
      - db
      - redis
      - app

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    environment:
      - APP_HOST=app
      - APP_PORT=9000
      - LISTEN_PORT=80
    volumes:
      - static-data:/vol/static
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  postgres-data:
  static-data: